#include <msp430.h>
#include "libTimer.h"
#include "buzzer.h"
#include "led.h"
#include "lcdutils.h"
#include "lcddraw.h"

char beatmax = 3;
char beat = 3;
void advanceState(){
  if (beat>=beatmax){ 
    redOn();
    buzzer_set_period(1000);
    beat=0;
  }
  else{
    greenOn();
    buzzer_set_period(2000);
    beat++;
  }
}
void increaseBeatMax(){
  if(beatmax<6){
    beatmax++;
  }
}
void decreaseBeatMax(){
  if(beatmax>3){
    beatmax--;
  }
}
#define centerRow (screenHeight/2)
#define centerCol (screenWidth/2)
void advanceState2(){
  static char state = 0;
  clearScreen(COLOR_BLUE);
  switch(state){
  case 0:
    clearScreen(COLOR_BLUE);
    for (int i = 0; i<20; i++){
      drawPixel(centerCol, centerRow-i, COLOR_PINK);
        }
    state++;
    break;
  case 1:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol-i, centerRow-i, COLOR_PINK);
    }
    state++;
    break;
  case 2:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol-i, centerRow, COLOR_PINK);
    }
    state++;
    break;
  case 3:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol-i, centerRow-i, COLOR_PINK);
    }
    state++;
    break;
  case 4:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol, centerRow-i, COLOR_PINK);
    }
    state++;
    break;
  case 5:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol+i, centerRow-i, COLOR_PINK);
    }
    state++;
    break;
  case 6:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol+i, centerRow, COLOR_PINK);
    }
    state++;
    break;
  case 7:
    clearScreen(COLOR_BLUE);
    for(int i = 0; i<20; i++){
      drawPixel(centerCol+i, centerRow-i, COLOR_PINK);
    }
    state=0;
    break;
  }
}
